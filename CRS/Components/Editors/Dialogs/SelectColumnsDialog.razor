@using MudBlazor

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Select Row Layout</MudText>
    </TitleContent>

    <DialogContent>
        <!-- Debug static node to verify rendering -->
        <div id="dbg-select-columns" style="padding:8px; background:rgba(0,0,0,0.02); margin-bottom:8px; text-align:center;">DEBUG: dialog loaded</div>
        <MudContainer Style="max-height:400px; overflow-y: auto; min-width:260px;">
            <MudList T="string" Dense="true">
                @foreach (var preset in presets) {
                    <MudListItem T="string" Clickable="true" OnClick="() => Select(preset.Widths)">
                        <div class="d-flex align-center" style="width:100%; justify-content:space-between;">
                            <MudText>@preset.Label</MudText>
                            <div style="display:flex; gap:6px; align-items:center;">
                                @foreach (var w in preset.Widths) {
                                    <MudPaper Elevation="0" Class="pa-1" Style="background:#f5f5f5; border:1px solid rgba(0,0,0,0.06); min-width:34px; text-align:center;">
                                        @w
                                    </MudPaper>
                                }
                            </div>
                        </div>
                    </MudListItem>
                }
            </MudList>
        </MudContainer>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Secondary">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }
    [Inject] ISnackbar Snackbar { get; set; }

    private readonly (string Label, string[] Widths)[] presets = new[] {
 ("Full Width", new[] { "1" }),
 ("Two Columns (50/50)", new[] { "1/2", "1/2" }),
 ("Three Columns (33/33/33)", new[] { "1/3", "1/3", "1/3" }),
 ("Two Columns (66/33)", new[] { "2/3", "1/3" }),
 ("Two Columns (33/66)", new[] { "1/3", "2/3" })
 };

    protected override void OnInitialized() {
        try {
            // Show a short debug snackbar when the dialog initializes
            Snackbar?.Add("SelectColumnsDialog initialized", Severity.Info);
        } catch {
            // swallow - we only want best-effort diagnostics
        }
    }

    private void Select(string[] widths) => MudDialog.Close(DialogResult.Ok(widths));
    private void Cancel() => MudDialog.Cancel();
}
