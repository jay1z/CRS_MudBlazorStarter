@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
        <MudNavMenu>
            <MudText Typo="Typo.h6" Class="px-4">My Application</MudText>
            <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Secondary Text</MudText>
            <MudDivider Class="my-2" />
            <MudNavLink Href="/shortcuts" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AppShortcut" IconColor="Color.Default">Shortcuts</MudNavLink>
        </MudNavMenu>

    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="/dashboard" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Primary">Dashboard</MudNavLink>
            @* <MudText Typo="Typo.caption" Class="px-4 mud-text-secondary">Pages</MudText> *@
            <MudDivider Class="my-2" />
            <MudNavGroup Title="Reserve Studies" Expanded="true">
                <MudNavLink Href="/reservestudies/" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Assignment" IconColor="Color.Warning">Active Studies</MudNavLink>
                <MudNavLink Href="/reservestudies/my" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.PersonPin" IconColor="Color.Warning">My Requests</MudNavLink>
                <MudNavLink Href="/reservestudies/sendlink" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Send" IconColor="Color.Warning">Send Link</MudNavLink>
            </MudNavGroup>
            <MudDivider Class="my-2" />
            <MudNavLink Href="/communities" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.HolidayVillage" IconColor="Color.Warning">Communities</MudNavLink>
            <MudNavLink Href="/calendar" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.CalendarMonth" IconColor="Color.Warning">Calendar</MudNavLink>
            <MudNavLink Href="/contacts" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Contacts" IconColor="Color.Warning">Contacts</MudNavLink>
            @* <MudText Typo="Typo.caption" Class="px-4 mud-text-secondary">Admin</MudText> *@
            <MudDivider Class="my-2" />
            <MudNavLink Href="/users" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.PeopleAlt" IconColor="Color.Secondary">Users</MudNavLink>
            @* <MudText Typo="Typo.caption" Class="px-4 mud-text-secondary">Help</MudText> *@
            <MudDivider Class="my-2" />
            <MudNavLink Href="/support" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ContactSupport" IconColor="Color.Primary">Support</MudNavLink>
            <MudNavLink Href="/faqs" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.QuestionAnswer" IconColor="Color.Primary">FAQ's'</MudNavLink>
            <MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix">
                <MudAvatar Color="Color.Primary" Size="Size.Small">JZ</MudAvatar>
                @* @context.User.Identity?.Name *@
            </MudNavLink>
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="mud-nav-link mud-ripple">
                    <MudIcon Icon="@Icons.Material.Filled.Logout" Color="Color.Info" Class="mr-3"></MudIcon> Logout
                </button>
            </form>
            <MudNavLink Href="/themes" Icon="@Icons.Material.Filled.Palette">Themes</MudNavLink>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">Register</MudNavLink>
            <MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Password">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

