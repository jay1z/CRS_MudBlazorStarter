@attribute [Authorize(Roles = "Admin, Specialist")]
@page "/reservestudies"
@using CRS.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<CRS.Data.ApplicationDbContext> DbFactory

<PageTitle>Active Studies</PageTitle>

@if (reserveStudies == null)
{
    <MudProgressLinear Color="Color.Info" Indeterminate="true" />
    <MudText Typo="Typo.h4">Loading...</MudText>
}
else
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
        <MudGrid>
            <MudItem xs="12">
                <MudCard Elevation="25">
                    <MudCardHeader>
                        <MudText Typo="Typo.h6" Class="mt-1 fw-semibold">@reserveStudies.Count Active Studies</MudText>
                        <MudSpacer />
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Create" Href="reservestudies/create">
                            Create
                        </MudButton>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTable Items="@reserveStudies" Dense="true" Hover="true" Elevation="0">
                            <HeaderContent>
                                <MudTh class="text-center">COMMUNITY</MudTh>
                                <MudTh class="text-center">CONTACT</MudTh>
                                <MudTh class="text-center">EMAIL</MudTh>
                                <MudTh class="text-end">PHONE</MudTh>
                                <MudTh></MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd Class="text-center">
                                    <MudText Typo="Typo.h6" Class="fw-bold">
                                        @context.Community.Name
                                    </MudText>
                                </MudTd>
                                <MudTd Class="text-center">
                                    <MudText Typo="Typo.body1">@context.PointOfContact?.FullNameInverted</MudText>
                                    <MudText Typo="Typo.caption">@context.PointOfContact?.CompanyName</MudText>
                                </MudTd>
                                <MudTd Class="text-center">
                                    <MudLink Href="@context.PointOfContact?.Email">@context.PointOfContact?.Email</MudLink>
                                </MudTd>
                                <MudTd Class="text-end">
                                    <MudText Typo="Typo.body1">@context.PointOfContact?.Phone</MudText>
                                    <MudText Typo="Typo.caption">ext. @context.PointOfContact?.Extension</MudText>
                                </MudTd>
                                <MudTd>
                                    <MudButton Variant="Variant.Text" Size="Size.Small" Href="@($"reservestudies/details/{context.Id}")">
                                        View
                                    </MudButton>
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudContainer>
}
@code {
    private List<ReserveStudy> reserveStudies = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        reserveStudies = await context.ReserveStudies
        .Include(rs => rs.Community)
        .Include(rs => rs.Contact)
        .Include(rs => rs.PropertyManager)
        .ToListAsync();
    }
}
