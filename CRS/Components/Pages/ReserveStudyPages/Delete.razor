@page "/reservestudies/delete"
@using Microsoft.EntityFrameworkCore
@using CRS.Models
@inject IDbContextFactory<CRS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>ReserveStudy</h2>
    <hr />
    @if (reservestudy is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ApplicationUserId</dt>
            <dd class="col-sm-10">@reservestudy.ApplicationUserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SpecialistUserId</dt>
            <dd class="col-sm-10">@reservestudy.SpecialistUserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PointOfContactType</dt>
            <dd class="col-sm-10">@reservestudy.PointOfContactType</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@reservestudy.IsActive</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsApproved</dt>
            <dd class="col-sm-10">@reservestudy.IsApproved</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsComplete</dt>
            <dd class="col-sm-10">@reservestudy.IsComplete</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateApproved</dt>
            <dd class="col-sm-10">@reservestudy.DateApproved</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@reservestudy.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateModified</dt>
            <dd class="col-sm-10">@reservestudy.DateModified</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateDeleted</dt>
            <dd class="col-sm-10">@reservestudy.DateDeleted</dd>
        </dl>
        <EditForm method="post" Model="reservestudy" OnValidSubmit="DeleteReserveStudy" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(reservestudy is null)">Delete</button> |
            <a href="/reservestudies">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private ReserveStudy? reservestudy;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        reservestudy = await context.ReserveStudies.FirstOrDefaultAsync(m => m.Id == Id);

        if (reservestudy is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteReserveStudy()
    {
        using var context = DbFactory.CreateDbContext();
        context.ReserveStudies.Remove(reservestudy!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/reservestudies");
    }
}
