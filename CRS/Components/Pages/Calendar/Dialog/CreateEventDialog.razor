@using CRS.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Add Event</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @* @ref="form" *@ Model="calendarEvent" OnValidSubmit="Submit">
            <MudTextField T="string" Label="Event Name" Required="true" RequiredError="Event name is required!" @bind-Value="calendarEvent.Title" />

            <MudTextField T="string" Label="Event Description" @bind-Value="calendarEvent.Description" />

            <MudTextField T="string" Label="Event Location" @bind-Value="calendarEvent.Location" />

            <MudCheckBox T="bool" @bind-Checked="calendarEvent.IsAllDay" Label="All Day" Color="Color.Primary" />

            <div class="d-flex gap-4">
                <MudDatePicker Label="Start Date" Required="true" @bind-Date="calendarEvent.Start" />

                @* @if (!calendarEvent.IsAllDay) {
                    <MudTimePicker Label="Start Time" Required="true" @bind-Time="startTime" />
                } *@
            </div>

            <div class="d-flex gap-4">
                <MudDatePicker Label="End Date" Required="true" @bind-Date="calendarEvent.End" />

                @* @if (!calendarEvent.IsAllDay) {
                    <MudTimePicker Label="End Time" Required="true" @bind-Time="endTime" />
                } *@
            </div>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Secondary">Cancel</MudButton>
        <MudButton OnClick="Submit" Color="Color.Primary" @* Disabled="@(!form.IsValid)" *@>Submit</MudButton>
    </DialogActions>
</MudDialog>

@code {
    //public MudForm form;
    // private void OnInitialized() {
    //     startTime = calendarEvent.Start.Value.TimeOfDay;
    //     endTime = calendarEvent.End.Value.TimeOfDay;
    // }

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public CalendarEvent calendarEvent { get; set; }
    private TimeSpan? startTime;
    private TimeSpan? endTime;

    private List<string> eventColors = new() {
        "primary", "info", "success", "warning", "error", "dark"
    };

    private async Task Submit() {
        // await form.Validate();
        // if (form.IsValid) {
        if (!calendarEvent.IsAllDay && startTime.HasValue) {
            calendarEvent.Start = calendarEvent.Start?.Date.Add(startTime.Value);
            calendarEvent.End = calendarEvent.End?.Date.Add(endTime ?? startTime.Value);
        }

        var context = await DbFactory.CreateDbContextAsync();
        context.Add(calendarEvent);
        await context.SaveChangesAsync();

        MudDialog.Close(DialogResult.Ok(calendarEvent));
        // }
    }

    private void Cancel() {
        MudDialog.Cancel();
    }
}
